[
    {
        "type": "ContactSensor",
        "parameters": [
            {
                "name": "input",
                "type": "InputBool",
                "required": true,
                "description": "How the device determines contact (i.e. a gpio input pin)"
            },
            {
                "name": "invert",
                "type": "bool",
                "required": true,
                "description": "Whether to invert open/closed"
            },
            {
                "name": "constantPoll",
                "type": "bool",
                "required": true,
                "description": "Whether to constantly poll the input source (usually should be true)"
            }
        ],
        "events": [
            "open",
            "closed",
            "changed"
        ],
        "commands": [
            "poll"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "Momentary",
        "parameters": [
            {
                "name": "output",
                "type": "OutputVoid",
                "required": true,
                "description": "What the device actuates (i.e. a gpio toggler)"
            }        
        ],
        "events": [
            "pushed"
        ],
        "commands": [
            "poll",
            "push"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "MotionSensor",
        "parameters": [
            {
                "name": "input",
                "type": "InputBool",
                "required": true,
                "description": "How the device determines motion (i.e. a gpio input pin)"
            },
            {
                "name": "invert",
                "type": "bool",
                "required": true,
                "description": "Whether to invert active/inactive"
            },
            {
                "name": "constantPoll",
                "type": "bool",
                "required": true,
                "description": "Whether to constantly poll the input source (usually should be true)"
            }
        ],
        "events": [
            "active",
            "inactive",
            "changed"
        ],
        "commands": [
            "poll"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "RelativeHumidityMeasurement",
        "parameters": [
            {
                "name": "input",
                "type": "InputFloat",
                "required": true,
                "description": "How the device determines humidity (i.e. analog input pin)"
            }
        ],
        "events": [
        ],
        "commands": [
            "poll"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "Switch",
        "parameters": [
            {
                "name": "output",
                "type": "OutputBool",
                "required": true,
                "description": "What the device sets to true/false (i.e. digital output pin)"
            },
            {
                "name": "input",
                "type": "InputBool",
                "required": false,
                "description": "If this OPTIONAL input parameter is created, the switch device will not \"trust\" the value it wrote to its output. Instead, it will report the value it reads from this input bool to SmartThings. (i.e. a switch that can be manually turned off/on)"
            },
            {
                "name": "invert",
                "type": "bool",
                "required": true,
                "description": "Whether or not to invert output"
            },
            {
                "name": "initial",
                "type": "bool",
                "required": true,
                "description": "Initial value to set the switch to at startup"
            },
            {
                "name": "ignoreRedundant",
                "type": "bool",
                "required": false,
                "default": false,
                "description": "If set to true, the switch will ignore commands to change its state if it already believes it is in that state. For example, it would ignore an on command if it deems itself to already be on."
            }
        ],
        "events": [
            "on",
            "off",
            "changed"
        ],
        "commands": [
            "poll",
            "on",
            "off",
            "toggle"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "TemperatureMeasurement",
        "parameters": [
            {
                "name": "input",
                "type": "InputFloat",
                "required": true,
                "description": "How the device determines temperature (i.e. analog input pin)"
            }
        ],
        "events": [
        ],
        "commands": [
            "poll"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "VoltageMeasurement",
        "parameters": [
            {
                "name": "input",
                "type": "InputFloat",
                "required": true,
                "description": "How the device determines voltage (i.e. analog input pin)"
            }
        ],
        "events": [
        ],
        "commands": [
            "poll"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "SwitchLevel",
        "parameters": [
            {
                "name": "output",
                "type": "OutputFloat",
                "required": true,
                "description": "The output device"
            },
            {
                "name": "input",
                "type": "InputFloat",
                "required": false,
                "description": "OPTIONAL input to read the switch level"
            },
            {
                "name": "initial",
                "type": "float",
                "required": true,
                "description": "Initial percent level value (0, 100)"
            }
        ],
        "events": [
            "changed"
        ],
        "commands": [
            "poll",
            "setLevel"
        ],
        "supported_platforms": [
            "all"
        ]
    },
    {
        "type": "DimmerSwitch",
        "parameters": [
            {
                "name": "output",
                "type": "OutputFloat",
                "required": true,
                "description": "The output device"
            },
            {
                "name": "input",
                "type": "InputFloat",
                "required": false,
                "description": "OPTIONAL input to read the switch level"
            },
            {
                "name": "initial",
                "type": "float",
                "required": true,
                "description": "Initial percent level value (0, 100)"
            }
        ],
        "events": [
            "on",
            "off",
            "changed"
        ],
        "commands": [
            "poll",
            "setLevel",
            "on",
            "off",
            "toggle"
        ],
        "supported_platforms": [
            "all"
        ]
    }
]
